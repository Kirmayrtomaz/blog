{"meta":{"title":"Kirmayr","subtitle":"Blog de tecnologia e saúde","description":"Blog sobre assuntos de desenvolvimento web voltando para o frontend e vida saudável.","author":"Kirmayr Tomaz","url":"http://kirmayrtomaz.github.io"},"pages":[{"title":"sobre","date":"2016-08-31T23:13:47.615Z","updated":"2016-08-31T23:13:47.615Z","comments":true,"path":"about.html","permalink":"http://kirmayrtomaz.github.io/about.html","excerpt":"","text":""}],"posts":[{"title":"Criando sites performáticos com HEXO (Parte 2 - 2)","slug":"post02-gerando_site_estatico","date":"2016-08-31T04:38:00.000Z","updated":"2016-09-12T17:19:14.828Z","comments":true,"path":"2016/08/31/post02-gerando_site_estatico/","link":"","permalink":"http://kirmayrtomaz.github.io/blog/2016/08/31/post02-gerando_site_estatico/","excerpt":"","text":"Nesse post mostrarei o template que estou utilizando no meu blog e os plugins adicionais que estou utilizando. A primeira coisa que fiz depois de baixar o hexo foi buscar um template legal, ele tem uma lista bem nesse link. O tema que escolhi foi o Again. Para coloca-lo no meu template vc pode simplismente baixa-lo e inserir na pasta themes/ 1git clone https://github.com/DrakeLeung/hexo-theme-again.git again Depois disso, precisei baixar uma nova dependência pois o template precisa utiliza o pre-processador Sass 1npm install --save hexo-renderer-sass E por último vc precisa alterar o arquivo de configuração _config.yml do tema e trocar-lo para again que é o nome do template Estrutura do templateA estrutura do template é composto das seguintes pastas 12345.├── _config.yml├── layout├── source` _config.yml - Estarão as configurações do template layout - Está todo o template no formato EJS template source - Está os assets, (js, css e imagens) Configurando tema no _config.ymlA configuração básica do tema é identica ao _config.yml da raiz. 12345title: Kirmayr Tomazdescription : Blog sobre assuntos de desenvolvimento web voltando para o frontend e vida saudável.subtitle: Desenvolvedor web pseudo corredorlanguage: pt_brtimezone: America/Manaus Nele vc já tem suporte pra inserir imagens e inserir também o disqus 123avatar: /images/avatar_2.JPGbanner_small: /images/title.pngbanner_large: /images/title.png 1234567# disqusdisqus_shortname: kirmayr-blog# socialsocial: github: https://github.com/kirmayrtomaz # twitter: https://twitter.com/DrakeLeung No nav, será inserido o menu de navegação. Cada link será um item do menu nav: home: . archive: archives about: about rss: sitemap.xml 12345678910111213141516171819202122232425262728293031323334353637383940## Plugins adicionaisAbaixo segue um lista dos plugins que achei essencial de utilizar no blog#### [hexo-admin](https://github.com/jaredly/hexo-admin)Para vc que sente saudade dá interface web do wordpress, joomla ou qualquer outro CMS. Esse plugin pode ajudar um pouquinho criando uma interface web para visualizar e editar seus posts. Abaixo temos um exemplo da interface web dele:![teste](/blog/images/02/hexoadmin.png)Vc consegue também editar o post pelo próprio Hexo-admin![teste](/blog/images/02/hexoadmin_02.png)Com esse plugin vc tem as seguintes funcionalidades * Edição de texto Markdown lado-a-lado* Os posts são salvos automaticamente * Copiar a imagem e colar. (Issa coisa do capeta funciona sabe deus como)* Publicar/despublicar imagem* Adicionar categorias, tags, nome do Autor e horário da publicação(exemplo abaixo)![pasted image](/blog/images/pasted-2.png)Segundo o criando desse plugin [Jared Forsyth](https://github.com/jaredly)para instar basta digitar na linha de comando``` bash$ npm install --save hexo-admin Daí basta digitar 1$ npm install server -d Adicione também algumas propriedades para acesso dos usuários no arquivo de configuração _config.yml 12345admin: name: admin ##nome do usuário password: admin ##senha secret: hey hexo ##segredo expire: 60*1 ##segredo Após isso basta acessar seu ambiente de desenvolvimento /admin/ 1$ http://localhost:4000/admin hexo-deployer-gitUm dos plugins mais legais que encontrei foi o deploy direto no git, configurei super rápido sua estrutura para funcionar no gh-pages no github Quem não sabe o que é gh-pages acesso o posto do Segredos do Github do da2k 1$ npm install hexo-deployer-git --save 1234deploy: type: git #o hexo tem suporte para outros deploys, no caso desde será o git repo: https://github.com/Kirmayrtomaz/blog.git #url do repositório branch: [\"gh-pages\"] #branch que deseja enviar Após realizar essas configurações, basta utilizar sempre esses dois comandos para fazer deploy. Primeiro precisamos gerar os arquivos estáticos e depois a função deploy pega os arquivos da pasta que foi gerando e envia direto para o git no branch gh-pages Plugin maravilhoso demais 12$ hexo generate$ hexo deploy hexo-filter-cleanupEsse com certeza é um dos principais plugins que não deve faltar no seu projeto. É ultra mega power mother fucker tera tander foda.Ele vem com um conjuntos de plugins para otimização do seu site hexo-html-minifier todas suas páginas html serão minificadas hexo-clean-css minifica seu css baseado no clean-css hexo-uglify minifica seu js hexo-imagemin compacta suas imagens mantendo a qualidade real useref transforma blocos de js em um só o mesmo para css favicons gerador automático de favicons 1$ npm install hexo-generator-sitemap --save ele executa automáticamente após a instalação, caso queira algo mais avançado basta acessar seu projeto hexo-generator-sitemapGerador de site map 1$ npm install hexo-generator-sitemap --save hexo-generator-json-contentGera um json do seu conteúdo. No meu caso ele gerou o content.json. De forma que vc pode acessar por outras aplicações via ajax. 123456789101112131415161718192021222324252627282930313233&#123; \"meta\": &#123; \"title\": \"Kirmayr\", \"subtitle\": \"Blog de tecnologia e saúde\", \"description\": \"Blog sobre assuntos ...\", \"author\": \"Kirmayr Tomaz\", \"url\": \"http://kirmayrtomaz.github.io\" &#125;, \"pages\": [..], \"posts\": [&#123; \"title\": \"Criando sites perfo...\", \"slug\": \"post02-gerando_site_estatico\", \"date\": \"2016-08-31T04:38:00.000Z\", \"updated\": \"2016-09-01T16:49:49.249Z\", \"comments\": true, \"path\": \"2016/08/31/post02-gerando_site_estatico/\", \"link\": \"\", \"permalink\": \"...\", \"excerpt\": \"\", \"text\": \"Nesse post mostrarei ...\", \"categories\": [&#123; \"name\": \"ferramentas\", \"slug\": \"ferramentas\", \"permalink\": \"...\" &#125;], \"tags\": [&#123; \"name\": \"javascript\", \"slug\": \"javascript\", \"permalink\": \"http://kirmayrtomaz.github.io/tags/javascript/\" &#125;], \"keywords\": [&#123;..&#125;] &#125; 1$ npm install hexo-generator-sitemap --save ConclusãoO artigo foi curtinho, mas a ideia é mostrar que o hexo é uma ferramente muito poderosa e as facilidades de criar um blog ou site são muitas. Tanto que em poucos minutos vc consegue fazer seu site rodar rapidamente","categories":[{"name":"ferramentas","slug":"ferramentas","permalink":"http://kirmayrtomaz.github.io/categories/ferramentas/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://kirmayrtomaz.github.io/tags/javascript/"},{"name":"node","slug":"node","permalink":"http://kirmayrtomaz.github.io/tags/node/"}],"keywords":[{"name":"ferramentas","slug":"ferramentas","permalink":"http://kirmayrtomaz.github.io/categories/ferramentas/"}]},{"title":"Criando sites performáticos com HEXO (Parte 1 - 2)","slug":"post01-gerando_site_estatico","date":"2016-08-29T04:38:00.000Z","updated":"2016-09-12T16:59:14.756Z","comments":true,"path":"2016/08/29/post01-gerando_site_estatico/","link":"","permalink":"http://kirmayrtomaz.github.io/blog/2016/08/29/post01-gerando_site_estatico/","excerpt":"","text":"A ideia desse artigo é mostrar as vantagens de sites estáticos com a utilização HEXO (framework feito NODEJS). Esse artigo vai ser composto por duas partes, nessa primeira mostrarei somente os conceitos básicos do HEXO e na segunda parte a instalção dos principais plugins e customização de um tema. Por que utilizar sites estáticos?Imagine uma situação em que toda vez que precisamos criar um site novo, pensamos logo em inserir um CMS monstro para que o cliente veja o que foi feito. Ou quando o site passa muitos meses sem nenhuma mudança, sem contar do custo pra deixar um site desse rodando. Situações comuns que ocorrem no nosso dia a dia de desenvolvedor web. Vamos pensar de maneira diferente, por que vale a pena fazer um site estático falando das vantagens do CDN(Content delivery Network) como parte do nosso projeto. Custo – Reduzem o custo da infraestrutura, soluções como CDN são mais baratas.o Gastar 10 reais na cdn77 seria necessário 63 GB já tendo suporte a http2. Imagine seu site abrindo nesa velocidade como nesse linko Dúvidas sobre preço basta acessar esse link Escalabilidade – Esse serviço é altamente escalavel, e não precisamos nos preocupar com a infra. De forma que ele responderia da mesma forma tanto para 1 quanto para 100000 usuários acessando ao mesmo tempo o conteúdo Confiabilidade – Seus arquivos serão acessados 24/7 por semana. Na outra situação um ataque de DDoS poderia derrubar seu servidor Integridade - Garatia de que os arquivos não são perdidos. O que já tem chance de acontecer com um servidor comum se fosse hackedo Principais geradoresUma vez que definido as vantagens para sites estáticos vamos analisar os principais geradores do mercado. No site StaticGen podemos encontar a lista dos principais frameworks open-sources que tem no mercado De todos, peguei somente os principais para analisar, já que nesse site possuem muitos Jekyll Stars -26630 Forks – 5858 Issues - 101 Language – Ruby Templates - Liquid GitBook Stars -12834 Forks – 1529 Issues - 528 Language – Javascript Templates – Jinja2 Hexo Stars -11685 Forks – 1902 Issues - 278 Language – Javascript Templates – EJS, JADE Hugo Stars -11287 Forks – 1830 Issues - 312 Language – Go Templates – Go templates Os critérios para definir qual framewok foram os números de estrelas no github, linguagem em javascript(Stack de desenvolvimento que trabalho) e customização Jekyll e Hugo foram logo descartados por serem de outras linguagens e restou Gitbook e Hexo. Analizando o Gitbook percebemos que este é mais voltado pra documentação e não possui tanto suporte para customização. Já o HEXO possui características parecidas com o Jekyll (principal gerador de sites estáticos) e possui um grande leque de customização, por isso foi o escolhido dentro todos. HexoInstalaçãoPara que seja instalado o hexo, primeiramente é necessário ter o NODEJS instalado, caso não tenha, basta acessar esse link a versão que tenho instaldo na minha máquina é a 6.2.1 Após instalar o node, vamos instalar o HEXO globalmente com o seguinte comando abaixo: 1npm install –g hexo-cli De forma que será instalado o hexo-cli globalmente no sistema Configuração Vamos iniciar um novo projeto com esse comando abaixo 1Hexo init &lt;nome do projeto&gt; Ele criará essa estrutura abaixo 123456789.├── _config.yml ├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes` Explicarei agora o que cada arquivo criado significa _config.yml - O hexo utilizará esse arquivo de configuração como base. Como por exemplo nome do site, endereço do tema, plugins e customizações package.json - Nesse arquivo constam as dependência em node para executar o gerador, sem esses pacotes algumas funções inseridas do _config.yml não serão executadas. 12345678910111213141516171819202122package.json&#123; \"name\": \"hexo-site\", \"version\": \"0.0.0\", \"private\": true, \"hexo\": &#123; \"version\": \"\" &#125;, \"dependencies\": &#123; \"hexo\": \"^3.0.0\", \"hexo-generator-archive\": \"^0.1.0\", \"hexo-generator-category\": \"^0.1.0\", \"hexo-generator-index\": \"^0.1.0\", \"hexo-generator-tag\": \"^0.1.0\", \"hexo-renderer-ejs\": \"^0.1.0\", \"hexo-renderer-stylus\": \"^0.2.0\", \"hexo-renderer-marked\": \"^0.2.4\", \"hexo-server\": \"^0.1.2\" &#125;&#125;` Pacotes hexo-generator-archive – gera automaticamente um diretório para acessar os posts por arquivo hexo-generator-category – pacote para dar suporte para as categorias do site. Para que isso funcione é nessário os posts terem categorias e o template ter gerado uma parte somente para isso hexo-generator-index – gera a index do site hexo-generator-tag – suporte para gerar link para posts com tags hexo-renderer-stylus - Suporte para o preprocessador stylus hexo-renderer-ejs – Suporte para template ejs (Effective JavaScript templating.)que transforma javascript em HTML hexo-renderer-marked – Suporte para markdown, os posts são escritos nesse formato de texto e convertidos em html Scaffolds – quando for necessário criar um post ou uma página nova, o esqueleto dele será copiado dessa pasta, como no exemplo abaixo source – Local onde serão criados os posts e páginas do blog _drafts – Post que foram criados mas ficam ocultos _post – post que foram criados e devem ser postados themes – local onde deve ser criado o template do sistema ou inserir template que achar melhor. Caso queira algum tema legal basta acessarpor padrão é baixado o template hexo-theme-landscapehttps://hexo.io/themes/ Uma vez que o esqueleto do blog foi gerado,Será necessário instalar as dependências do sistema.Basta utilizar o comando abaixo para instalar as dependências 1$ npm install Comandos Básicospara criar um novo post basta digitar 1$ hexo new [layout] &lt;title&gt; uma vez que o site foi instalado basta digitar 1$ hexo server para acessar no ambiente local do sistema o site 1$ hexo generate Configurações básicasCustomizando _config.ymlUma vez que já temos nosso site inicial configurado, a primeira coisa que começamos a fazer é customizar o arquivo _config.yml siteConfigurações gerais do site tipo descricao title Nome padrao que aparecerá no título do site subtitle Subtítulo description descrição do que o site aparesentará author nome do autor language lingua padrão do site, por defaut fica em “en”, recomendavel trocar para “pt”. timezone Timezone que deve ser utilziado ex:America/Manaus url tipo descricao url Url do seu site, no meu caso é http://kirmayrtomaz.github.io/ root raiz que deve ser acessado, no meu caso é /blog/ permalink permalink dos posts, :year/:month/:day/:title/ , vc pode customizar da forma que achar necessário Directory tipo descricao source_dir source - Diretório onde estão os posts e páginas public_dir public Diretório onde será gerado os arquivos estáticos tag_dir tags - Dentro da pasta public_dir será gerado a pasta tag_dir archive_dir archives - Dentro da pasta public_dir será gerado a pasta archive_dir category_dir categories - Dentro da pasta public_dir será gerado a pasta category_dir code_dir downloads/code Outras funções básicas basta acessar a documentação do HEXO No próximo post, explicarei como funciona o template e os principais plugin do HEXO.","categories":[{"name":"ferramentas","slug":"ferramentas","permalink":"http://kirmayrtomaz.github.io/categories/ferramentas/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://kirmayrtomaz.github.io/tags/javascript/"},{"name":"node","slug":"node","permalink":"http://kirmayrtomaz.github.io/tags/node/"}],"keywords":[{"name":"ferramentas","slug":"ferramentas","permalink":"http://kirmayrtomaz.github.io/categories/ferramentas/"}]}]}